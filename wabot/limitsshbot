#!/bin/bash
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# System Request : Debian 9+/Ubuntu 18.04+/20+
# Develovers » Gemilangkinasih࿐
# Email      » gemilangpremium@gmail.com
# telegram   » https://t.me/gemilangkinasih
# whatsapp   » wa.me/+6287782718065
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Gemilangkinasih࿐

function send_log(){
domain=$(cat /etc/xray/domain)
CHATID=$(cat /root/telebotvpn/idtelegrub)
KEY=$(cat /root/telebotvpn/tokentelebot)
TIME="10"
URL="https://api.telegram.org/bot$KEY/sendMessage"
TEXT="
──────────────────────
🚫 Notifikasi Multilogin SSH!
──────────────────────
<code>User  :</code> <code>$1</code>
<code>Limit :</code> <code>2</code>
<code>Login :</code> <code>$3</code>
<code>Domen :</code> <code>$domain</code>
────────────────────── 
Unlock User Otomatis 30 Menit
────────────────────── "

curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
}

# Menentukan file log berdasarkan OS yang digunakan
if [ -e "/var/log/auth.log" ]; then
    OS=1;
    LOG="/var/log/auth.log";
elif [ -e "/var/log/secure" ]; then
    OS=2;
    LOG="/var/log/secure";
else
    echo "Log file tidak ditemukan.";
    exit 1;
fi

# Mendapatkan daftar pengguna yang akan dihapus
cat /etc/passwd | grep "/home/" | cut -d":" -f1 > /root/user.txt
username1=( `cat "/root/user.txt" `);
i="0";
for user in "${username1[@]}"
do
    username[$i]=`echo $user | sed 's/'\''//g'`;
    jumlah[$i]=0;
    i=$i+1;
done

# Array untuk menyimpan kombinasi unik user dan IP
declare -A login_session

# Mengambil informasi pengguna dari file log dropbear
grep -i "Password auth succeeded" "$LOG" | grep -i dropbear > /tmp/log-db.txt
for PID in $(ps aux | grep -i dropbear | awk '{print $2}'); do
    if grep -q "dropbear\[$PID\]" /tmp/log-db.txt; then
        USER=$(grep "dropbear\[$PID\]" /tmp/log-db.txt | awk '{print $10}' | sed 's/'\''//g')
        IP=$(grep "dropbear\[$PID\]" /tmp/log-db.txt | awk '{print $12}')

        # Mengecek apakah kombinasi USER dan IP sudah ada di login_session
        if [[ -z "${login_session[$USER-$IP]}" ]]; then
            for i in "${!username[@]}"; do
                if [[ "${username[$i]}" == "$USER" ]]; then
                    jumlah[$i]=$((jumlah[$i] + 1))
                    pid[$i]+="$PID "
                fi
            done
            login_session["$USER-$IP"]=1 # Simpan kombinasi unik USER dan IP
        fi
    fi
done

# Mengambil informasi pengguna dari file log sshd
grep -i "Accepted password for" "$LOG" | grep -i sshd > /tmp/log-db.txt
for PID in $(ps aux | grep "\[priv\]" | awk '{print $2}'); do
    if grep -q "sshd\[$PID\]" /tmp/log-db.txt; then
        USER=$(grep "sshd\[$PID\]" /tmp/log-db.txt | awk '{print $9}')
        IP=$(grep "sshd\[$PID\]" /tmp/log-db.txt | awk '{print $11}')

        # Mengecek apakah kombinasi USER dan IP sudah ada di login_session
        if [[ -z "${login_session[$USER-$IP]}" ]]; then
            for i in "${!username[@]}"; do
                if [[ "${username[$i]}" == "$USER" ]]; then
                    jumlah[$i]=$((jumlah[$i] + 1))
                    pid[$i]+="$PID "
                fi
            done
            login_session["$USER-$IP"]=1 # Simpan kombinasi unik USER dan IP
        fi
    fi
done

# Fungsi untuk memeriksa apakah pengguna sudah unlock
function is_unlocked() {
    user_status=$(passwd -S $1 | awk '{print $2}')
    if [ "$user_status" == "P" ]; then
        # Status "P" artinya password aktif (akun unlock)
        return 0
    else
        # Akun locked
        return 1
    fi
}

for i in ${!username[*]}
do
    MAX=4;
    # Cek apakah pengguna sudah unlock
    if is_unlocked "${username[$i]}"; then
        echo "Pengguna ${username[$i]} sudah unlock, lewati."
        continue
    fi
    
    if [ ${jumlah[$i]} -gt $MAX ]; then
        date=$(date +"%Y-%m-%d %X");
        echo "$date - ${username[$i]} - ${jumlah[$i]}";
        
        # Mengunci pengguna multilogin
        passwd -l ${username[$i]};
        send_log "${username[$i]}" "$MAX" "${jumlah[$i]}"
        echo "unlocklimitipbot ssh ${username[$i]}" | at now + 30 minutes &> /dev/null

        if [ $OS -eq 1 ]; then
            systemctl restart ssh > /dev/null 2>&1;
        elif [ $OS -eq 2 ]; then
            systemctl restart sshd > /dev/null 2>&1;
        fi

        # Membersihkan variabel yang digunakan
        jumlah[$i]=0;
        pid[$i]="";
    fi
    sleep 30
done